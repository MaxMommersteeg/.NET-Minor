// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Case2.MaRoWo.GarageAdministratie.Infrastructure.Agents.RdwIntegrationService.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class ApkKeuringsVerzoekCommand
    {
        /// <summary>
        /// Initializes a new instance of the ApkKeuringsVerzoekCommand class.
        /// </summary>
        public ApkKeuringsVerzoekCommand() { }

        /// <summary>
        /// Initializes a new instance of the ApkKeuringsVerzoekCommand class.
        /// </summary>
        public ApkKeuringsVerzoekCommand(string kenteken, int kilometerstand, string eigenaarNaam, string voertuigType, DateTime keuringsDatum, string keuringsinstantieKvkNummer, string keuringsinstantieType, string bedrijfsnaam, string bedrijfPlaats, long onderhoudsBeurtId)
        {
            Kenteken = kenteken;
            Kilometerstand = kilometerstand;
            EigenaarNaam = eigenaarNaam;
            VoertuigType = voertuigType;
            KeuringsDatum = keuringsDatum;
            KeuringsinstantieKvkNummer = keuringsinstantieKvkNummer;
            KeuringsinstantieType = keuringsinstantieType;
            Bedrijfsnaam = bedrijfsnaam;
            BedrijfPlaats = bedrijfPlaats;
            OnderhoudsBeurtId = onderhoudsBeurtId;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "kenteken")]
        public string Kenteken { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "kilometerstand")]
        public int Kilometerstand { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eigenaarNaam")]
        public string EigenaarNaam { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "voertuigType")]
        public string VoertuigType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "keuringsDatum")]
        public DateTime KeuringsDatum { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "keuringsinstantieKvkNummer")]
        public string KeuringsinstantieKvkNummer { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "keuringsinstantieType")]
        public string KeuringsinstantieType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bedrijfsnaam")]
        public string Bedrijfsnaam { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bedrijfPlaats")]
        public string BedrijfPlaats { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "onderhoudsBeurtId")]
        public long OnderhoudsBeurtId { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Kenteken == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Kenteken");
            }
            if (EigenaarNaam == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EigenaarNaam");
            }
            if (VoertuigType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "VoertuigType");
            }
            if (KeuringsinstantieKvkNummer == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "KeuringsinstantieKvkNummer");
            }
            if (KeuringsinstantieType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "KeuringsinstantieType");
            }
            if (Bedrijfsnaam == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Bedrijfsnaam");
            }
            if (BedrijfPlaats == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "BedrijfPlaats");
            }
            if (this.Kilometerstand > 2147483647)
            {
                throw new ValidationException(ValidationRules.InclusiveMaximum, "Kilometerstand", 2147483647);
            }
            if (this.Kilometerstand < 0)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "Kilometerstand", 0);
            }
            if (this.KeuringsinstantieKvkNummer != null)
            {
                if (this.KeuringsinstantieKvkNummer.Length > 11)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "KeuringsinstantieKvkNummer", 11);
                }
                if (this.KeuringsinstantieKvkNummer.Length < 8)
                {
                    throw new ValidationException(ValidationRules.MinLength, "KeuringsinstantieKvkNummer", 8);
                }
            }
        }
    }
}
